name: CI Rust Pipeline

on:
  pull_request:
    branches:
      - main
      - dev
  push:
    branches:
      - main
      - dev

jobs:
  check-branches:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Vérification de la branche
        run: |
          bash scripts/bash/git/branch/check_branch.sh "${GITHUB_REF##*/}"

  rust-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Installer Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Vérifier la compilation
        run: cargo check
      - name: Vérifier les tests
        run: cargo test --all --verbose

  check-scripts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Vérifier la présence des scripts DevOps
        run: |
          for script in scripts/bash/git/commit/add_commit.sh scripts/bash/git/branch/create_branch.sh scripts/bash/git/branch/delete_branch.sh scripts/bash/git/status/status_all.sh scripts/bash/pipelines/after_pr_pipeline.sh scripts/bash/pipelines/create_and_commit.sh scripts/bash/pipelines/full_push.sh scripts/bash/pipelines/pr_simulation.sh; do
            if [ ! -f "$script" ]; then
              echo "⛔️ Script $script manquant !"
              exit 1
            fi
          done

  commit-msg-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Vérifier le format des messages de commit
        run: |
          for msg in $(git log --pretty=format:%s origin/main..HEAD); do
            bash scripts/git_hooks/commit-msg.sh <(echo "$msg")
          done
